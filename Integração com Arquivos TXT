# Lendo Arquivos
# O python possui de forma nativa métodos que podem manipular arquivos .Método open: -> Abre um arquivo txt
# Link Arquivo txt: https://drive.google.com/file/d/1k7F2Ke9CrMSI6bZW9KKm-ZKEscTVVxHa/view

arquivo = open('NomeArquivo.txt', 'r')

# Usamos 'r' para abrir o arquivo para ler (read) e 'w' quando estamos abrindo o arquivo para escrever (write) ou 'a' se formos adicionar (append) uma informação no arquivotxt, não sendo necessário importar bibliotecas para isso.

arquivo_alunos = open('Alunos.txt', 'r')

# quando fazemos a definição da variável do arquivo existem 2 métodos de leitura do arquivo, o método .readlines e .read(). O método .readlines() transforma cada linha do seu texto em uma lista enquanto o .read() realiza a leitura do texto bruto tal qual apresentado no bloco .txt 

texto_arquivo = arquivo.read()

lista_linhas = arquivo.readlines()

# Criando arquivos
# Utilizando o método open() com a chave 'w' (write), criamos um novo arquivo que irá substituir qualquer arquivo no mesmo local que estiver o caderno ou endereço definido

novo_arquivo = open('resumo.txt', 'w')

# para escrever utiliza-se o método write()

novo_arquivo.write('Olá, Mundo!')

# Apenas escrever não é o bastante para que o arquivo seja realmente modificado, sendo necessário salvar a versão mais recente do arquivo. Utilizaremos o método .close()

novo_arquivo.close()

# Método With
# É uma estrutura que é utilizada para abrir o arquivo e ao final da estrutura já realiza o método de fechamento do arquivo.

with open('resumo2.txt', 'w') as arquivo2:
  arquivo2.write('Olá, mundo!\nSegunda linha')
  arquivo2.write('Terceira linha')
    
# Desta forma não é necessário usar o método .close(), pois a estrutura já faz este passo de forma automática.
# Agora vamos fazer uma análise do arquivo txt colocado aqui
# O arquivo provém do curso de Python da Hashtag treinamentos

# repetindo o código:

arquivo_alunos = open('Alunos.txt', 'r')
lista_linhas = arquivo_alunos.readlines()

# removendo o que é desnecessário para a análise

del lista_linhas[:4]

# vamos definir os nossos indicadores dividindo entre contatos que foram feitos através de anuncios e de forma orgânica

qtde_anuncio= 0
qtde_org = 0
qtde_yt_org = 0
qtde_igfb_org = 0
qtde_site_org = 0

# percorrendo a lista de linhas de forma em que possamos separar os emails da origem do dado
# aproveitando a estrutura do for, vamos inserir condições para aproveitar a estrutura

for linha in lista_linhas:
    email, origem = linha.split(",")
    if '_org' in origem:
        qtde_org += 1
        if 'hashtag_yt_org' in origem:
            qtde_yt_org += 1
        if 'hashtag_site_org' in origem:
            qtde_site_org += 1
        if 'hashtag_ig_org' in origem or 'hashtag_igfb_org' in origem:
            qtde_igfb_org += 1
    else:
        qtde_anuncio += 1
        
# Fechando o arquivo
arquivo_alunos.close()

# Exibindo resultados:
print('Quantidade anúncio: {}'.format(qtde_anuncio))
print('Quantidade orgânico: {}'.format(qtde_org))
print('Quantidade Youtube: {}'.format(qtde_yt_org))
print('Quantidade Instagram ou Facebook: {}'.format(qtde_igfb_org))
print('Quantidade Site: {}'.format(qtde_site_org))




